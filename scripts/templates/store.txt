export default {
  state: {
    {{pluralSC}}: []
  },
  mutations: {
    SET_{{pluralUSC}}(state, value) {
      state.{{pluralSC}} = value
    }
  },
  actions: {
    get{{pluralPC}}PaginableList({ commit }, params) {
      commit('SHOW_LOADER')

      return new Promise((resolve) => {
        this.$clients.api
          .get(`{{pluralSC}}`, {
            params,
          })
          .then(({ data }) => {
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
    get{{pluralPC}}List({ commit, getters }, params) {
      return new Promise((resolve) => {
        if (!this.$clients.api.canFetch('{{pluralSC}}', params)) {
          resolve(getters.{{pluralSC}})
          return
        }

        commit('SHOW_LOADER')

        this.$clients.api
          .get(`{{pluralSC}}`, {
            params,
            list: true,
            persist: true,
          })
          .then(({ data }) => {
            commit('SET_{{pluralUSC}}', data.data)
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
    show{{singularPC}}({ commit }, {{singularSC}}_id) {
      commit('SHOW_LOADER')

      return new Promise((resolve) => {
        this.$clients.api
          .get(`{{pluralSC}}/${{{singularSC}}_id}`)
          .then(({ data }) => {
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
    create{{singularPC}}({ commit }, form) {
      commit('SHOW_LOADER')

      return new Promise((resolve) => {
        this.$clients.api
          .post(`{{pluralSC}}`, form)
          .then(({ data }) => {
            this.$toast.success(data.data)
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
    update{{singularPC}}({ commit }, { {{singularSC}}_id, form }) {
      commit('SHOW_LOADER')

      return new Promise((resolve) => {
        this.$clients.api
          .put(`{{pluralSC}}/${{{singularSC}}_id}`, form)
          .then(({ data }) => {
            this.$toast.success(data.data)
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
    delete{{singularPC}}({ commit }, {{singularSC}}_id) {
      commit('SHOW_LOADER')

      return new Promise((resolve) => {
        this.$clients.api
          .delete(`{{pluralSC}}/${{{singularSC}}_id}`)
          .then(({ data }) => {
            this.$toast.success(data.data)
            resolve(data.data)
          })
          .catch(this.$errorHandler)
          .finally(() => {
            commit('HIDE_LOADER')
          })
      })
    },
  },
  getters: {
    {{pluralSC}}: (state) => state.{{pluralSC}}
  }
}
